{"version":3,"sources":["webpack:///./src/components/PublicationCard/publicationCard.module.less","webpack:///./src/components/PublicationCard/index.jsx","webpack:///./src/pages/publications/index.jsx"],"names":["module","exports","PublicationCard","props","frontmatter","data","node","className","style","publicationCard","to","Utils","resolvePageUrl","path","gutter","align","xs","sm","md","lg","dateHolder","moment","date","format","title","excerpt","color","wordSpacing","tags","join","postCardImg","backgroundImage","cover","childImageSharp","fluid","src","query","Publications","Header","description","Sidebar","allMarkdownRemark","edges","map","val","key"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,gBAAkB,iDAAiD,YAAc,6CAA6C,OAAS,wCAAwC,WAAa,8C,iRCyC/LC,EAnCS,SAACC,GAAW,IACVC,EAAoBD,EAApCE,KAAQC,KAAQF,YAExB,OACE,yBAAKG,UAAWC,IAAMC,iBACpB,kBAAC,OAAD,CAAMC,GAAIC,IAAMC,eAAeR,EAAYS,OACzC,uBAAKC,OAAQ,CAAC,GAAI,IAAKC,MAAM,UAC3B,uBAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,6BACE,2BACE,0BAAMZ,UAAWC,IAAMY,YAAahB,EAAciB,IAAOjB,EAAYkB,MAAMC,OAAO,eAAiB,KAErG,4BAAKnB,EAAcA,EAAYoB,MAAQ,IACvC,2BAAIpB,EAAcA,EAAYqB,QAAU,IACxC,uBAAGjB,MAAO,CAAEkB,MAAO,UAAWC,YAAa,SAA3C,IAEUvB,EAAYwB,KAAKC,KAAK,SAKpC,uBAAKb,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC5B,yBACEZ,UAAWC,IAAMsB,YACjBtB,MAAO,CACLuB,gBAAgB,QAAQ3B,GAAeA,EAAY4B,MAAQ5B,EAAY4B,MAAMC,gBAAgBC,MAAMC,IAAM,IAA1F,Y,YCgBlBC,EAAK,aA+BHC,UArEM,SAAC,GAAD,IAAGhC,EAAH,EAAGA,KAAH,OACnB,uBAAQE,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC+B,EAAA,EAAD,MACA,kBAAC,IAAD,CACEd,MAAM,eACNe,YAAY,qOAGZ1B,KAAK,iBAEP,kBAAC2B,EAAA,EAAD,KACE,yBAAKjC,UAAU,kBACb,wBAAIA,UAAU,iBAAd,iBAEF,uBAAKO,OAAQ,CAAC,GAAI,KAEdT,EAAKoC,mBAAqBpC,EAAKoC,kBAAkBC,MAAMC,KAAI,SAACC,EAAKC,GAAN,OAEzD,uBAAKA,IAAKA,EAAK7B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACzC,kBAAC,EAAD,CAAiBd,KAAMuC","file":"component---src-pages-publications-index-jsx-48c6f10a25fe1a27db69.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"publicationCard\":\"publicationCard-module--publicationCard--3UmDB\",\"postCardImg\":\"publicationCard-module--postCardImg--lafNE\",\"mrTp20\":\"publicationCard-module--mrTp20--tHkyD\",\"dateHolder\":\"publicationCard-module--dateHolder--3TzW_\"};","import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport { Row, Col } from 'antd';\nimport style from './publicationCard.module.less';\nimport Utils from '../../utils/pageUtils';\n\nconst PublicationCard = (props) => {\n  const { data: { node: { frontmatter } } } = props;\n\n  return (\n    <div className={style.publicationCard}>\n      <Link to={Utils.resolvePageUrl(frontmatter.path)}>\n        <Row gutter={[10, 10]} align=\"middle\">\n          <Col xs={24} sm={24} md={16} lg={16}>\n            <div>\n              <p>\n                <span className={style.dateHolder}>{frontmatter ? moment(frontmatter.date).format('MMM Do YYYY') : ''}</span>\n              </p>\n              <h3>{frontmatter ? frontmatter.title : ''}</h3>\n              <p>{frontmatter ? frontmatter.excerpt : ''}</p>\n              <p style={{ color: '#ce6d96', wordSpacing: '10px' }}>\n                {\n                    `#${frontmatter.tags.join(' #')}`\n                }\n              </p>\n            </div>\n          </Col>\n          <Col xs={0} sm={0} md={8} lg={8}>\n            <div\n              className={style.postCardImg}\n              style={{\n                backgroundImage: `url(${frontmatter && frontmatter.cover ? frontmatter.cover.childImageSharp.fluid.src : ''})`,\n              }}\n            />\n          </Col>\n        </Row>\n      </Link>\n    </div>\n  );\n};\n\nexport default PublicationCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Layout, Row, Col } from 'antd';\nimport Header from '../../components/PageLayout/Header';\n\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport PublicationCard from '../../components/PublicationCard';\nimport SEO from '../../components/Seo';\n\nconst Publications = ({ data }) => (\n  <Layout className=\"outerPadding\">\n    <Layout className=\"container\">\n      <Header />\n      <SEO\n        title=\"Publications\"\n        description=\"I like blogging about various web technologies and other stuff related to\n          javascript and other trends like graphql, prisma etc. This blog expresses my views of various technologies\n          and scenarios I have come across in realtime.\"\n        path=\"publications\"\n      />\n      <SidebarWrapper>\n        <div className=\"marginTopTitle\">\n          <h1 className=\"titleSeparate\">Publications</h1>\n        </div>\n        <Row gutter={[20, 20]}>\n          {\n            data.allMarkdownRemark && data.allMarkdownRemark.edges.map((val, key) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={24} lg={24}>\n                <PublicationCard data={val} />\n              </Col>\n            ))\n          }\n        </Row>\n      </SidebarWrapper>\n    </Layout>\n  </Layout>\n);\n\nPublications.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { \n        fileAbsolutePath: { regex: \"/publications\\/.*\\/index\\\\.md$/\" }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 288) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n          fileAbsolutePath\n        }\n      }\n    }\n  }\n`;\n\nexport default Publications;\n"],"sourceRoot":""}