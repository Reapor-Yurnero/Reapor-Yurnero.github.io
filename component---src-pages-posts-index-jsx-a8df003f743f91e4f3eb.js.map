{"version":3,"sources":["webpack:///./src/pages/posts/index.jsx","webpack:///./src/components/PostCard/index.jsx","webpack:///./src/components/PostCard/postCard.module.less"],"names":["query","Posts","data","className","title","description","path","gutter","allMarkdownRemark","edges","map","val","key","xs","sm","md","lg","PostCard","props","node","Utils","generateOmittedPostInfo","frontmatter","style","postCard","to","resolvePageUrl","postCardImg","backgroundImage","cover","childImageSharp","fluid","src","mrTp20","align","dateHolder","moment","date","format","tags","tag","excerpt","module","exports"],"mappings":"0RAgDaA,EAAK,YA+BHC,UArED,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACZ,uBAAQC,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,MAAM,QACNC,YAAY,qOAGZC,KAAK,UAEP,kBAAC,IAAD,KACE,yBAAKH,UAAU,kBACb,wBAAIA,UAAU,iBAAd,UAEF,uBAAKI,OAAQ,CAAC,GAAI,KAEdL,EAAKM,mBAAqBN,EAAKM,kBAAkBC,MAAMC,KAAI,SAACC,EAAKC,GAAN,OAEzD,uBAAKA,IAAKA,EAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACzC,kBAAC,IAAD,CAAUd,KAAMS,c,gMCUjBM,IAhCE,SAACC,GAAW,IACXC,EAAWD,EAAnBhB,KAAQiB,KAChBC,IAAMC,wBAAwBF,GAFJ,IAGlBG,EAAgBH,EAAhBG,YAER,OACE,yBAAKnB,UAAWoB,IAAMC,UACpB,kBAAC,OAAD,CAAMC,GAAIL,IAAMM,eAAeJ,EAAYhB,OACzC,yBACEH,UAAWoB,IAAMI,YACjBJ,MAAO,CACLK,gBAAgB,QAAQN,GAAeA,EAAYO,MAAQP,EAAYO,MAAMC,gBAAgBC,MAAMC,IAAM,IAA1F,OAGnB,yBAAK7B,UAAWoB,IAAMU,QACpB,4BAAKX,EAAcA,EAAYlB,MAAQ,MAG3C,uBAAK8B,MAAM,SAAS3B,OAAQ,CAAC,EAAG,IAC9B,uBAAKM,IAAE,GACL,0BAAMV,UAAWoB,IAAMY,YAAab,EAAcc,IAAOd,EAAYe,MAAMC,OAAO,eAAiB,KAEnGhB,EAAYiB,KAAK7B,KAAI,SAAC8B,GAAD,OAAU,kBAAC,IAAD,CAASA,IAAKA,QAEjD,kBAAC,OAAD,CAAMf,GAAIL,IAAMM,eAAeJ,EAAYhB,OACzC,2BAAIgB,EAAcA,EAAYmB,QAAU,Q,qBChChDC,EAAOC,QAAU,CAAC,SAAW,mCAAmC,YAAc,sCAAsC,OAAS,iCAAiC,WAAa","file":"component---src-pages-posts-index-jsx-a8df003f743f91e4f3eb.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Layout, Row, Col } from 'antd';\nimport Header from '../../components/PageLayout/Header';\n\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport PostCard from '../../components/PostCard';\nimport SEO from '../../components/Seo';\n\nconst Posts = ({ data }) => (\n  <Layout className=\"outerPadding\">\n    <Layout className=\"container\">\n      <Header />\n      <SEO\n        title=\"Posts\"\n        description=\"I like blogging about various web technologies and other stuff related to\n          javascript and other trends like graphql, prisma etc. This blog expresses my views of various technologies\n          and scenarios I have come across in realtime.\"\n        path=\"posts\"\n      />\n      <SidebarWrapper>\n        <div className=\"marginTopTitle\">\n          <h1 className=\"titleSeparate\">Posts</h1>\n        </div>\n        <Row gutter={[20, 20]}>\n          {\n            data.allMarkdownRemark && data.allMarkdownRemark.edges.map((val, key) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={24} lg={8}>\n                <PostCard data={val} />\n              </Col>\n            ))\n          }\n        </Row>\n      </SidebarWrapper>\n    </Layout>\n  </Layout>\n);\n\nPosts.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { \n        fileAbsolutePath: { regex: \"/posts\\/.*\\/index\\\\.md$/\" }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 288) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n          fileAbsolutePath\n        }\n      }\n    }\n  }\n`;\n\nexport default Posts;\n","import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport { Row, Col } from 'antd';\nimport style from './postCard.module.less';\nimport PostTag from '../PostTag';\nimport Utils from '../../utils/pageUtils';\n\nconst PostCard = (props) => {\n  const { data: { node } } = props;\n  Utils.generateOmittedPostInfo(node);\n  const { frontmatter } = node;\n\n  return (\n    <div className={style.postCard}>\n      <Link to={Utils.resolvePageUrl(frontmatter.path)}>\n        <div\n          className={style.postCardImg}\n          style={{\n            backgroundImage: `url(${frontmatter && frontmatter.cover ? frontmatter.cover.childImageSharp.fluid.src : ''})`,\n          }}\n        />\n        <div className={style.mrTp20}>\n          <h3>{frontmatter ? frontmatter.title : ''}</h3>\n        </div>\n      </Link>\n      <Row align=\"middle\" gutter={[0, 8]}>\n        <Col xs>\n          <span className={style.dateHolder}>{frontmatter ? moment(frontmatter.date).format('MMM Do YYYY') : ''}</span>\n        </Col>\n        { frontmatter.tags.map((tag) => (<PostTag tag={tag} />))}\n      </Row>\n      <Link to={Utils.resolvePageUrl(frontmatter.path)}>\n        <p>{frontmatter ? frontmatter.excerpt : ''}</p>\n        {/* </div> */}\n      </Link>\n    </div>\n  );\n};\n\nexport default PostCard;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"postCard-module--postCard--3vov_\",\"postCardImg\":\"postCard-module--postCardImg--yRYws\",\"mrTp20\":\"postCard-module--mrTp20--31jVy\",\"dateHolder\":\"postCard-module--dateHolder--k3h7B\"};"],"sourceRoot":""}