{"version":3,"sources":["webpack:///./src/templates/tags/index.jsx","webpack:///./src/components/PostCard/index.jsx","webpack:///./src/templates/tags/tags.module.less","webpack:///./src/components/PostCard/postCard.module.less"],"names":["pageQuery","TagPage","data","tag","pageContext","tagName","Statistics","tags","name","tagPagePath","Config","pages","posts","allMarkdownRemark","edges","className","title","description","path","Utils","resolvePageUrl","keywords","style","tagsList","gutter","map","post","key","xs","sm","md","lg","PostCard","props","node","generateOmittedPostInfo","frontmatter","url","postCard","bodyStyle","padding","hoverable","cover","dateHolder","moment","date","format","postCardImg","backgroundImage","childImageSharp","fluid","src","onClick","e","target","toLowerCase","navigate","Meta","marginBottom","align","marginTop","excerpt","module","exports"],"mappings":"yWAsFaA,EAAS,YA2CPC,UA9GC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KACTC,EADiC,EAAlBC,YACfD,IACFE,EAAUC,EAAWC,KAAKJ,GAAKK,MAAQL,EACvCM,EAAcC,IAAOC,MAAMJ,KAG3BK,EAAQV,EAAKW,kBAAkBC,MACrC,OACE,uBAAQC,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,MAAOX,EACPY,YAAW,kBAAoBZ,EAApB,KAAgCC,EAAWC,KAAKJ,GAAKc,YAArD,IACXC,KAAMC,IAAMC,eAAeX,EAAaN,GACxCkB,SAAU,CAAChB,KAEb,kBAAC,IAAD,KACE,yBAAKU,UAAS,kBAAoBO,IAAMC,UACtC,wBAAIR,UAAU,iBAAd,IAEGV,GAKH,wBAAIU,UAAU,cACXT,EAAWC,KAAKJ,GAAKc,cAG1B,uBAAKO,OAAQ,CAAC,GAAI,KACfZ,EAAMa,KAAI,SAACC,EAAMC,GAAP,OAET,uBAAKA,IAAKA,EAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACzC,kBAAC,IAAD,CAAU7B,KAAMwB,c,4MCEjBM,IA3CE,SAACC,GAAW,IACXC,EAAWD,EAAnB/B,KAAQgC,KAChBf,IAAMgB,wBAAwBD,GAFJ,IAGlBE,EAAgBF,EAAhBE,YAEFC,EAAMlB,IAAMC,eAAegB,EAAYlB,MAQ7C,OACE,uBACEH,UAAWO,IAAMgB,SACjBC,UAAW,CAAEC,QAAS,UACtBC,WAAS,EACTC,MACE,6BACE,0BAAM3B,UAAWO,IAAMqB,YAAaP,EAAcQ,IAAOR,EAAYS,MAAMC,OAAO,eAAiB,IACnG,yBACE/B,UAAWO,IAAMyB,YACjBzB,MAAO,CACL0B,gBAAgB,QAAQZ,GAAeA,EAAYM,MAAQN,EAAYM,MAAMO,gBAAgBC,MAAMC,IAAM,IAA1F,QAKvBC,QAvBgB,SAACC,GACoB,MAAnCA,EAAEC,OAAOjD,QAAQkD,eAAyBlB,GAE5CmB,mBAASnB,KAsBT,sBAAMoB,KAAN,CACEzC,MAAOoB,EAAcA,EAAYpB,MAAQ,GACzCM,MAAO,CAAEoC,aAAc,UAEzB,uBAAKC,MAAM,SAASnC,OAAQ,CAAC,EAAG,IAC5BY,EAAY7B,KAAKkB,KAAI,SAACtB,GAAD,OAAU,kBAAC,IAAD,CAASA,IAAKA,QAEjD,uBAAGmB,MAAO,CAAEsC,UAAW,SAAWxB,EAAcA,EAAYyB,QAAU,O,qBCjD5EC,EAAOC,QAAU,CAAC,SAAW,+BAA+B,mBAAqB,yCAAyC,UAAY,kC,qBCAtID,EAAOC,QAAU,CAAC,SAAW,mCAAmC,YAAc,sCAAsC,WAAa","file":"component---src-templates-tags-index-jsx-873f362133bb7b422637.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* Vendor imports */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n// import Img from 'gatsby-image';\nimport {\n  Layout, Row, Col,\n} from 'antd';\n/* App imports */\nimport SEO from '../../components/Seo';\nimport Header from '../../components/PageLayout/Header';\nimport PostCard from '../../components/PostCard';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport Config from '../../../config';\nimport Statistics from '../../../content/statistics.json';\nimport Utils from '../../utils/pageUtils';\nimport style from './tags.module.less';\n\nconst TagPage = ({ data, pageContext }) => {\n  const { tag } = pageContext;\n  const tagName = Statistics.tags[tag].name || tag;\n  const tagPagePath = Config.pages.tags;\n  // const tagImage = data.allFile.edges.find((edge) => edge.node.name === tag).node\n  //   .childImageSharp.fluid;\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <Header />\n        <SEO\n          title={tagName}\n          description={`All post about ${tagName}. ${Statistics.tags[tag].description} `}\n          path={Utils.resolvePageUrl(tagPagePath, tag)}\n          keywords={[tagName]}\n        />\n        <SidebarWrapper>\n          <div className={`marginTopTitle ${style.tagsList}`}>\n            <h1 className=\"titleSeparate\">\n              #\n              {tagName}\n            </h1>\n            {/* <div className={style.bannerImgContainer}> */}\n            {/*  <Img className={style.bannerImg} fluid={tagImage} alt={tagName} /> */}\n            {/* </div> */}\n            <h4 className=\"textCenter\">\n              {Statistics.tags[tag].description}\n            </h4>\n          </div>\n          <Row gutter={[20, 20]}>\n            {posts.map((post, key) => (\n            // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={12} lg={8}>\n                <PostCard data={post} />\n              </Col>\n            ))}\n          </Row>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nTagPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object).isRequired,\n    }).isRequired,\n    allFile: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            childImageSharp: PropTypes.shape({\n              fluid: PropTypes.object.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }),\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxHeight: 600) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TagPage;\n","import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport {\n  Row, Col, Card, Divider,\n} from 'antd';\nimport { navigate } from '@reach/router';\n\nimport style from './postCard.module.less';\nimport PostTag from '../PostTag';\nimport Utils from '../../utils/pageUtils';\n\nconst PostCard = (props) => {\n  const { data: { node } } = props;\n  Utils.generateOmittedPostInfo(node);\n  const { frontmatter } = node;\n\n  const url = Utils.resolvePageUrl(frontmatter.path);\n  const handleClick = (e) => {\n    if (e.target.tagName.toLowerCase() !== 'a' && url) {\n      // window.location.href = url;\n      navigate(url);\n    }\n  };\n\n  return (\n    <Card\n      className={style.postCard}\n      bodyStyle={{ padding: '0.8rem' }}\n      hoverable\n      cover={(\n        <div>\n          <span className={style.dateHolder}>{frontmatter ? moment(frontmatter.date).format('MMM Do YYYY') : ''}</span>\n          <div\n            className={style.postCardImg}\n            style={{\n              backgroundImage: `url(${frontmatter && frontmatter.cover ? frontmatter.cover.childImageSharp.fluid.src : ''})`,\n            }}\n          />\n        </div>\n      )}\n      onClick={handleClick}\n    >\n      <Card.Meta\n        title={frontmatter ? frontmatter.title : ''}\n        style={{ marginBottom: '1rem' }}\n      />\n      <Row align=\"middle\" gutter={[0, 8]}>\n        { frontmatter.tags.map((tag) => (<PostTag tag={tag} />))}\n      </Row>\n      <p style={{ marginTop: '1rem' }}>{frontmatter ? frontmatter.excerpt : ''}</p>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagsList\":\"tags-module--tagsList--39vLn\",\"bannerImgContainer\":\"tags-module--bannerImgContainer--24LjU\",\"bannerImg\":\"tags-module--bannerImg--xzH6c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"postCard-module--postCard--3vov_\",\"postCardImg\":\"postCard-module--postCardImg--yRYws\",\"dateHolder\":\"postCard-module--dateHolder--k3h7B\"};"],"sourceRoot":""}