{"componentChunkName":"component---node-modules-gatsby-theme-academic-src-templates-post-post-jsx-content-file-path-content-research-gvisor-optimization-index-md","path":"/research/gvisor_optimization/","result":{"data":{"mdx":{"tableOfContents":{"items":[{"url":"#introduction","title":"Introduction"}]},"frontmatter":{"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/1695f7c1de984950c59d7ecf81fd70dd/0a86e/logo.png","srcSet":"/static/1695f7c1de984950c59d7ecf81fd70dd/0a86e/logo.png 608w","sizes":"(min-width: 608px) 608px, 100vw"},"sources":[{"srcSet":"/static/1695f7c1de984950c59d7ecf81fd70dd/facf1/logo.webp 608w","type":"image/webp","sizes":"(min-width: 608px) 608px, 100vw"}]},"width":1000,"height":342.10526315789474}}}},"fields":{"slug":{"html":"\n## Introduction\n\nIn this project, we analyzed the performance of the gVisor memory management subsystem, starting from benchmarking malloc and ending up focusing on MMAP. We further profiled MMAP performance within gVisor and identify its bottlenecks. We proposed an optimization in the free page searching algorithm of virtual memory space within gVisor (from O(N) to O(logN)).\n\nThis work has been merged into the production version of [gVisor](https://github.com/google/gvisor). For technical details, please refer to the [code/commit](https://github.com/google/gvisor/commit/059879e14301660c9fce1e5e59bdfaef89fc4aaf), [slide](./final_pre.pptx), and [report](./cse291_project_final_report.pdf).","htmlEncrypted":"","nonce":"","timeToRead":null,"title":"Improving gVisor Memory Subsystem Performance","date":"Jan 2020 - June 2020","tags":["Operating System","Virtualization","Open Source Contribution"],"path":"research/gvisor_optimization","excerpt":"In this project, we analyzed the performance of the gVisor memory management subsystem, starting from benchmarking malloc and ending up focusing on MMAP. We further profiled MMAP performance within gVisor and identified its bottlenecks. We proposed an optimization in the free page searching algorithm of virtual memory space within gVisor (from O(N) to O(logN)). This optimization patch has been merged into production.","links":[{"name":"code","url":"https://github.com/google/gvisor/commit/059879e14301660c9fce1e5e59bdfaef89fc4aaf"},{"name":"slide","url":"/files/5e18d5ab06457cd3edad48cf6db84d4b/final_pre.pptx"},{"name":"report","url":"/files/ad5e3bbbdb2e7f4dbb5dc19c121e89a9/cse291_project_final_report.pdf"}],"commit":0,"type":"research"}},"internal":{"contentFilePath":"/home/runner/work/Reapor-Yurnero.github.io/Reapor-Yurnero.github.io/content/research/gvisor_optimization/index.md"}}},"pageContext":{"contentFilePath":"/home/runner/work/Reapor-Yurnero.github.io/Reapor-Yurnero.github.io/content/research/gvisor_optimization/index.md","postPath":"research/gvisor_optimization","translations":[{"hreflang":"en","path":"/research/gvisor_optimization"}],"frontmatter":{"title":"Improving gVisor Memory Subsystem Performance","tags":["Operating System","Virtualization","Open Source Contribution"],"date":"Jan 2020 - June 2020","path":"research/gvisor_optimization","excerpt":"In this project, we analyzed the performance of the gVisor memory management subsystem, starting from benchmarking malloc and ending up focusing on MMAP. We further profiled MMAP performance within gVisor and identified its bottlenecks. We proposed an optimization in the free page searching algorithm of virtual memory space within gVisor (from O(N) to O(logN)). This optimization patch has been merged into production.","selected":true,"cover":"./logo.png","links":[{"name":"code","url":"https://github.com/google/gvisor/commit/059879e14301660c9fce1e5e59bdfaef89fc4aaf"},{"name":"slide","file":"./final_pre.pptx"},{"name":"report","file":"./cse291_project_final_report.pdf"}],"priority":-8}}},"staticQueryHashes":["1552981879","2158328490","3013679938"],"slicesMap":{}}