{"componentChunkName":"component---src-templates-post-post-jsx","path":"/research/constant_time","result":{"data":{"markdownRemark":{"timeToRead":1,"frontmatter":{"cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'%20viewBox='0%200%20400%20400'%20preserveAspectRatio='none'%3e%3cpath%20d='M191%2035c-33%205-59%2030-63%2061v6l-9-17-9-16-49-1H12l39%2068%205%209h12l11%201%2015%2028%2015%2028-2%207c-7%2039%2017%2082%2054%2099l8%204%2015%2027%2016%2028%2016-28%2015-28%208-3c38-17%2061-59%2054-99l-1-8%2014-27%2015-28%2012-1h12l4-7a18660%2018660%200%200139-69l-49-1h-49l-5%208-8%2015-4%207-2-7c-9-36-45-61-80-56m3%2047c-19%205-29%2025-21%2042%2015%2029%2059%2018%2057-15-2-18-19-32-36-27m-5%20108c-8%203-16%2010-20%2018-2%205-2%207-2%2015%200%2036%2047%2047%2064%2015%204-8%204-23%200-30-7-16-25-23-42-18'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1,"src":"/static/4dc83b10f42ad6f281c691a09366ba34/31987/preview.png","srcSet":"/static/4dc83b10f42ad6f281c691a09366ba34/e1953/preview.png 250w,\n/static/4dc83b10f42ad6f281c691a09366ba34/46604/preview.png 500w,\n/static/4dc83b10f42ad6f281c691a09366ba34/31987/preview.png 1000w,\n/static/4dc83b10f42ad6f281c691a09366ba34/f3583/preview.png 1200w","sizes":"(max-width: 1000px) 100vw, 1000px"}}}},"fileAbsolutePath":"/home/runner/work/Reapor-Yurnero.github.io/Reapor-Yurnero.github.io/content/research/constant_time/index.md","fields":{"parsed":{"html":"<h2>Introduction</h2>\n<p>Timing attacks on cryptosystems have long been researched since 1996. Various attacks, such as cache timing attack on AES, and defenses, such as timing attack resistant AES-GCM, over widely used cryptography algorithms have been developed and applied to well-known libraries, such as OpenSSL. Tools have been developed for analyzing the time-constancy of a crypto-function implemented in C or C++. The time-constancy of cryptographic libraries implemented in other languages remains an understudied area. Consequently, applications and websites based on these libraries may suffer from potential security vulnerabilities. </p>\n<p>In this project, we aim to detect whether popular cryptographic libraries in Golang, JavaScript and Python 3 have constant-time implementations. Our contributions are: </p>\n<ol>\n<li>A constant-time assessment tool for Golang, JavaScriptand Python 3 evolved from <a href=\"https://github.com/oreparaz/dudect\" target=\"_blank\" rel=\"nofollow\">dudect</a>.</li>\n<li>A test suite against common cryptography primitives.</li>\n<li>Presentation and discussion of the results of evaluating the official Crypto library (and its extension) of Golang, PyCrypto, Cryptography, and PyCryptodome of Python3, and the official Cryptolibrary of Node.js</li>\n</ol>\n<h2>Ongoing Work</h2>\n<p>Future work will extend these preliminary investigations by</p>\n<ol>\n<li>expanding the test vectors with more implementation-specific inputs</li>\n<li>taking hardware optimization into consideration in measurements</li>\n<li>delving into the impacts of runtime/JIT of Python and JS on constant-time implementations.</li>\n</ol>","htmlEncrypted":"","nonce":"","title":"Constant-Time Analysis for Well-Known Cryptography Libraries","date":"Apr 2020 - Present","tags":["Security & Privacy","Programming Language","Cryptography"],"path":"research/constant_time","excerpt":"This project presents a toolset for assessing whether a cryptographic function is constant-time on two given (distinct)input sets. The toolset extends new support to languages other than C or C++, including Python3, Golang, and JavaScript. We present a comprehensive test suite covering common cryptographic primitives and providing finely-chosen inputs that can cause non-constant-time behavior of certain implementations. We then evaluate our approach by applying this test suite to a set of libraries with our toolset and observing the violations that are detected. Our preliminary results suggest that language runtime features such as JIT may break the constant-time requirement.","links":[],"commit":1606119279,"type":"research"}}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/Reapor-Yurnero.github.io/Reapor-Yurnero.github.io/content/research/constant_time/index.md","postPath":"research/constant_time","translations":[{"hreflang":"en","path":"/research/constant_time"}]}},"staticQueryHashes":["4097791827"]}